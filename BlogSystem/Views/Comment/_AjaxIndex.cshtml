@model IQueryable<BsComment>
@* This view shall only include grid declaration (not raw HTML)! *@

@(Html
        .Grid(Model)
        .Build(columns =>
        {
            columns.Add(model => $"<input type=\"checkbox\" name=\"selectedComments\" value=\"{model.Id}\" />").Encoded(false)
            .Titled(Html.CheckBox("selectAll", false, new
            {
                onclick="multiSelect(this.getAttribute('id'), 'input[name=\"selectedComments\"]')"
            })).Encoded(false);

            columns.Add(model => model.Id).Titled("ID");

            columns.Add(model => model.Name).RenderedAs(model => string.IsNullOrEmpty(model.Email) ? model.Name : $"<a href=\"mailto:{model.Email}\" title=\"{model.Email}\">{model.Name}</a>")
            .Encoded(false).Titled("Author");

            columns.Add(model => model.Date).Titled("Date").Formatted("{0:yyyy-MM-dd HH:mm}");

            columns.Add(model => model.Comment).RenderedAs(model => model.Comment.Length > 50 ? model.Comment.Substring(0, 50) + "..." : model.Comment)
            .Titled("Comment");

            columns.Add(model => model.EntryId).Titled("Entry ID");

            columns.Add(model => $"<a href=\"Comment/Edit/{model.Id}\" title=\"Edit comment.\">" +
            $"<img src=\"../imgs/bootstrap-icons/pencil-square.svg\" width=\"15\" height=\"15\" /></a>&nbsp;&nbsp;&nbsp;" +
            $"<form method=\"post\" style=\"display: inline-block\" action=\"Comment/Delete/{model.Id}\">" +
            $"<button type=\"submit\" class=\"btn-as-link\" title=\"Delete comment.\" onclick=\"return confirm('Are you sure you want to delete this comment?')\">" +
            $"<img src=\"../imgs/bootstrap-icons/trash-fill.svg\" width=\"15\" height=\"15\" /></button></form>").Encoded(false);
        })
        .Attributed(new { id = "GridTable" })
        .Sortable()
        .Filterable()
        .Css("css-classes")
        .AppendCss("table")
        .Empty("No comments found.")
        .Pageable(pager =>
        {
            pager.RowsPerPage = 50;
        })
)